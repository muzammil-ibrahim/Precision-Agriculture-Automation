function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React from "react";
import getDisplayName from "./getDisplayName";
let uid = 1;
const nextUID = () => `uid${uid++}`;
export default function RandomUID(WrappedComponent) {
  class RandomUID extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        uid: nextUID()
      };
    }
    render() {
      return /*#__PURE__*/React.createElement(WrappedComponent, _extends({
        _uid: this.state.uid
      }, this.props));
    }
  }
  RandomUID.displayName = `RandomUID(${getDisplayName(WrappedComponent)})`;
  return RandomUID;
}